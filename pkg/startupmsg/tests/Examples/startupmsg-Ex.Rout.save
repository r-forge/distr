
R Under development (unstable) (2024-08-17 r87027 ucrt) -- "Unsuffered Consequences"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "startupmsg"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('startupmsg')
:startupmsg>  Utilities for Start-Up Messages (version 0.9.7)
:startupmsg> 
:startupmsg>  For more information see ?"startupmsg",
:startupmsg>  NEWS("startupmsg")

> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("StartupUtilities")
> ### * StartupUtilities
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: StartupUtilities
> ### Title: Utilities for start-up messages
> ### Aliases: startupmsg infoShow TOBEDONE NEWS readVersionInformation
> ###   readURLInformation pointertoNEWS StartupMessage startupPackage
> ###   startupType startupEndline startupMessage suppressStartupMessages
> ###   onlytypeStartupMessages
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## a set of test messages
> several.messages<-function() {
+ startupMessage("this is a type 'version' startup message", pkg="PKG")
+ startupMessage("this is a type 'information' startup message", 
+                 pkg="PKG", type="information")
+ message("this is an ordinary message")}
> 
> ## issuing of messages with different wrappers
> several.messages()
this is a type 'version' startup message
this is a type 'information' startup message
this is an ordinary message
> suppressStartupMessages(several.messages())
this is an ordinary message
> suppressMessages(several.messages())
> onlytypeStartupMessages(several.messages(),atypes=c("version","notabene"))
this is a type 'version' startup message

this is an ordinary message
> 
> ##Example by Seth Falcon:
> ## Here is a test function
> doit <- function() {
+     several.messages()
+     return(123)
+ }
> 
> ## Here is an example message handler.  Here, you could write messages
> ## to a file, send them as email to your friends or enemies, etc.
> ## For the example, we'll just prepend 'MSG:'
> msgLogger <- function(m) {
+              types<-paste("(", startupType(m),"):", sep="")
+              cat(paste("MSG: ",types, conditionMessage(m)), "\n")
+              }
> 
> ## Finally, call the doit function and customize how messages are
> ## handled.
> withCallingHandlers(doit(),
+                     StartupMessage=function(m) {
+                         invokeRestart("custom", m, msgLogger)
+                     })
MSG:  (version): this is a type 'version' startup message
 
MSG:  (information): this is a type 'information' startup message
 
this is an ordinary message
[1] 123
> ### reading information file utilities
> readVersionInformation("stats")
$ver
[1] "4.5.0"

$title
[1] "The R Stats Package"

> readURLInformation("MASS")
[1] "http://www.stats.ox.ac.uk/pub/MASS4/"
> ## for packages with URL file see e.g. dse1
> pointertoNEWS("startupmsg") ## no NEWS file;
[1] "NEWS(\"startupmsg\")"
> 
> ## IGNORE_RDIFF_BEGIN
> 
> NEWS("startupmsg") ## no NEWS file; 
######################################################################
#  News: to package startupmsg
######################################################################

##############
v 0.9.7
##############

under the hood:
with the help of K. Hornik identified spurious, platform dependent LF/CR issue
and capsulated calls to infoShow() in Rd files by 
## IGNORE_RDIFF_BEGIN
## IGNORE_RDIFF_END

##############
v 0.9.6
##############

user-visible CHANGES:
+ DESCRIPTION tag SVNRevision changed to VCS/SVNRevision

##############
v 0.9
##############

user-visible CHANGES:
+ title changed to title style / capitalization

GENERAL ENHANCEMENTS:

under the hood:
added .Rbuildignore

BUGFIXES:

##############
v 0.8
##############

under the hood: 
+ startupmsg gains a namespace
+ added DESCRIPTION tag "ByteCompile" to all our packages
+ updating maintainer email address and URL.
+ deleted no longer needed chm folders

##############
v 0.7
##############

user-visible CHANGES:

+ new command TOBEDONE() --- similarly to NEWS() to access TOBEDONE file

GENERAL ENHANCEMENTS:

+ added tests/Examples folder with file startupmsg-Ex.Rout.save to have
  some automatic testing
+ added field "Encoding: latin1" to all DESCRIPTION files in order to avoid problems 
  with e.g. Windows locale when svn replaces $LastChangedDate
+ added TOBEDONE (sic!) files for each package (by accident also in trunc; these are empty so far)

##############
v 0.6
##############

* Rd-style:
  + several buglets detected with the fuzzier checking mechanism
    cf [Rd] More intensive checking of R help files, Prof Brian Ripley, 09.01.2009 10:25) 
       [Rd] Warning: missing text for item ... in \describe? , Prof Brian Ripley,

##############
v 0.5.3
##############
  
  * new issuer 'mySMHandler' to cope with long package names and
     variable "paper" widths acc. to getOption("width")
     (automatically inserts line breaks...)
  * moved license to LGPL-3

  
##############
v 0.5
##############

* startup messages are now also of S3-class 'packageStartupMessage'
  and hence may now also be suppressed by 
  suppressPackageStartupMessages() (from package 'base')

##############
v 0.4
##############

* deleted: import "methods" from Namespace
* included: argument "VIGNETTE" in function "buildStartupMessage"

##############
v 0.3
##############

* inserted references to the mail thread 
  "Wishlist: 'quietly' argument for .onAttach() / .First.lib()"
  on r-devel, April 2006 into seealso  

##############
v 0.2
##############

* abolished: S3 class StartupVersionMessage with corresponding constructor
* abolished: call startupVersionMessage
* abolished: control for linestarter (anyone could do this himself: 
             + the developper using his own SMHandler 
             + the user by specifying a suitable custom restart
* abolished: wrapper onlyversionStartupMessages
* abolished: modified output in startMessage

* instead: extended S3 class StartupMessage by a slot 'type' with corresponding
           accessor startupType
* instead: onlytypeStartupMessages with an atypes argument to filter out 
           types that are to be shown
* instead: introduction of mystartMessage with a 
* instead: startMessage now comes with a type argument
* instead/new: SMHandler argument for mystartupMessage and buildStartupMessage
               defaulting to mySMHandler
* clarified: code to buildStartupMessage

* new: separation into "general routines" documented in ?"startmsg"
       and an illustration covering mystartupMessage and buildStartupMessage
       documented in ?"mystartupMessage"
* new: custom restart (idea: Seth Falcon)


##############
v 0.1
##############

* defined S3 classes StartupMessage, StartupVersionMessage with corresponding constructors
* accessor startupPackage
* wrappers suppressStartupMessages, onlyversionStartupMessages
* calls startupMessage, startupVersionMessage
* utilities readVersionInformation, readURLInformation, pointertoNEWS, infoShow, NEWS
* main function buildStartupMessage (also controllable by options "StartupBanner" resp. "StartupLinestarter")
   
> ## for packages with NEWS file see e.g. randomForest, distr
> 
> ## IGNORE_RDIFF_END
> 
> 
> 
> cleanEx()
> nameEx("myStartupUtilities")
> ### * myStartupUtilities
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: myStartupUtilities
> ### Title: Example functions to utilities for start-up messages
> ### Aliases: mystartupMessage mySMHandler buildStartupMessage
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## a set of test messages
> 
> msg <- "Note that you may set global options by options() --- cf. ?\"options\"."
> 
> ## issuing of messages controlled by options()
> buildStartupMessage(pkg="stats", msg) 
:stats>  The R Stats Package (version 4.5.0)
:stats> 
:stats>  Note that you may set global options by options() --- cf.
:stats>  ?"options".

> suppressStartupMessages(buildStartupMessage(pkg="stats", msg) )
> suppressMessages(buildStartupMessage(pkg="stats", msg))
> onlytypeStartupMessages(buildStartupMessage(pkg="stats", msg),
+           atypes="version")
The R Stats Package (version 4.5.0)

> 
> getOption("StartupBanner")
NULL
> buildStartupMessage(pkg="stats", msg)
:stats>  The R Stats Package (version 4.5.0)
:stats> 
:stats>  Note that you may set global options by options() --- cf.
:stats>  ?"options".

> 
> options("StartupBanner"="off");getOption("StartupBanner")
[1] "off"
> buildStartupMessage(pkg="stats", msg)
> 
> options("StartupBanner"="complete");getOption("StartupBanner")
[1] "complete"
> buildStartupMessage(pkg="stats", msg)
:stats>  The R Stats Package (version 4.5.0)
:stats> 
:stats>  Note that you may set global options by options() --- cf.
:stats>  ?"options".

> 
> options("StartupBanner"="something else");getOption("StartupBanner")
[1] "something else"
> buildStartupMessage(pkg="stats", msg)
:stats>  The R Stats Package (version 4.5.0)
:stats> 
> 
> options("StartupBanner"=NULL);getOption("StartupBanner")
NULL
> buildStartupMessage(pkg="stats", msg)
:stats>  The R Stats Package (version 4.5.0)
:stats> 
:stats>  Note that you may set global options by options() --- cf.
:stats>  ?"options".

> 
> 
> MNH <- "https://www.r-project.org/"
> buildStartupMessage(pkg="stats", msg, packageHelp=TRUE, MANUAL=MNH)
:stats>  The R Stats Package (version 4.5.0)
:stats> 
:stats>  Note that you may set global options by options() --- cf.
:stats>  ?"options".
:stats> 
:stats>  For more information see ?"stats"

> ## not quite a manual, but to illustrate the principle:
> ## "demo/nlm.R" as a "manual": to be system-independent the 
> ## first call is to be preferred 
> buildStartupMessage(pkg="stats", msg, packageHelp=TRUE, MANUAL=c("demo","nlm.R"))
:stats>  The R Stats Package (version 4.5.0)
:stats> 
:stats>  Note that you may set global options by options() --- cf.
:stats>  ?"options".
:stats> 
:stats>  For more information see ?"stats", as well as
:stats>    C:/PF/R/R-devel5/library/stats/demo/nlm.R

> ###  works, too, (i.e. is equivalent) under Linux and Windows (at least):
> buildStartupMessage(pkg="stats", msg, packageHelp=TRUE, MANUAL="demo/nlm.R")
:stats>  The R Stats Package (version 4.5.0)
:stats> 
:stats>  Note that you may set global options by options() --- cf.
:stats>  ?"options".
:stats> 
:stats>  For more information see ?"stats", as well as
:stats>    C:/PF/R/R-devel5/library/stats/demo/nlm.R

> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.15 0.07 0.23 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
